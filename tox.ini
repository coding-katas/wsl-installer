[tox]
envlis = integration
skipsdist = True

[testenv]
envdir = {toxworkdir}/.work_env
passenv =
    GITLAB_CI_USER
    GITLAB_CI_TOKEN
    GITLAB_CI_PASS
    DOCKER_HOST
setenv =
    CI_API_V4_URL = {env:CI_API_V4_URL:https://gitlab.tech.orange/api/v4}
    CICD_TAG = {env:CICD_TAG:master}
    PROJECT_ID_CICD = {env:PROJECT_ID_CICD:293287}
whitelist_externals =
    bash

[testenv:tests-basic]
whitelist_externals =
    bash
    bandit
    pwsh
setenv =
    {[testenv]setenv}
    BUILD_TEST_IMAGE_BRANCH = {env:BUILD_TEST_IMAGE_BRANCH:master}
    PROJECT_TEMP_DIR = {env:PROJECT_TEMP_DIR:./.tox/tests-basic/checks_dir}
    ENABLE_TEST_QUALITY_BATS_COVERAGE = {env:ENABLE_TEST_QUALITY_BATS_COVERAGE:no}
commands =
    bash -cE "[ -f ./.tox/tests-basic.sh ] && true || curl -kLs --retry 3 --retry-delay 5 -H 'PRIVATE-TOKEN: {env:GITLAB_CI_TOKEN}' {env:CI_API_V4_URL}/projects/{env:PROJECT_ID_CICD}/repository/files/.00.scripts%2Ftests-basic.sh/raw?ref={env:CICD_TAG:master} >./.tox/tests-basic.sh"
    bash -cE "bash -E ./.tox/tests-basic.sh"
    bash -cE "rm -rf ./checks_dir"

[testenv:clean]
commands =
    bash -cE "rm -rf ./tests/bats/bats-core ./tests/bats/helper ./.tox ./public/*"
    bash -cE "find ./ -xdev \( -name '.eggs' \) -type d -exec rm -rfv \{\} + || true"
    bash -cE "find ./ -xdev \( -name '__pycache__' -or -name '.pytest_cache' \) -type d -exec rm -rfv \{\} + || true"
    bash -cE "find ./ -xdev \( -name 'secucheck-*' \) -type d -exec rm -rfv \{\} + || true"
    bash -cE "rm -f *-linux-amd64_* cover.out"
